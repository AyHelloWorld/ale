Before:
  call ale#assert#SetUpLinterTest('ocaml', 'ols')

  Save &filetype
  let &filetype = 'ocaml'

After:
  call ale#assert#TearDownLinterTest()

Execute(The language string should be correct):
  AssertEqual 'ocaml', ale#handlers#ols#GetLanguage(bufnr(''))

Execute(The default executable should be correct):
  AssertLinter 'ocaml-language-server',
  \ ale#Escape('ocaml-language-server') . ' --stdio'

Execute(The project root should be detected correctly):
  AssertEqual '', ale#handlers#ols#GetProjectRoot(bufnr(''))

  call ale#test#SetFilename('ols_paths/file.ml')

  AssertEqual
  \ ale#path#Simplify(g:dir . '/ols_paths'),
  \ ale#handlers#ols#GetProjectRoot(bufnr(''))

Execute(The local executable should be used when available):
  call ale#test#SetFilename('ols_paths/file.ml')

  AssertLinter ale#path#Simplify(g:dir . '/ols_paths/node_modules/.bin/ocaml-language-server'),
  \ ale#Escape(ale#path#Simplify(g:dir . '/ols_paths/node_modules/.bin/ocaml-language-server')) . ' --stdio'

Execute(The gloabl executable should always be used when use_global is set):
  let g:ale_ocaml_ols_use_global = 1
  call ale#test#SetFilename('ols_paths/file.ml')

  AssertLinter 'ocaml-language-server',
  \ ale#Escape('ocaml-language-server') . ' --stdio'

Execute(The executable should be configurable):
  let g:ale_ocaml_ols_executable = 'foobar'

  AssertLinter 'foobar', ale#Escape('foobar') . ' --stdio'
